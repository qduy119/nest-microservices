// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.3.0
//   protoc               v5.28.3
// source: libs/shared/src/proto/item.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "item";

export interface Item {
  id: number;
  thumbnail: string;
  name: string;
  description: string;
  price: number;
  discount: number;
  stock: number;
  images: string[];
  rating: number;
}

export interface SearchItemRequest {
  index: string;
  query: string;
  fields: string[];
  limit: number;
  offset: number;
}

export interface SearchItemResponse {
  items: Item[];
}

export interface CreateIndexRequest {
  index: string;
  documents: Item[];
}

export interface CreateIndexResponse {
}

export interface GetAllItemsRequest {
}

export interface GetAllItemsResponse {
  items: Item[];
}

export const ITEM_PACKAGE_NAME = "item";

export interface ItemServiceClient {
  searchItem(request: SearchItemRequest): Observable<SearchItemResponse>;

  createIndex(request: CreateIndexRequest): Observable<CreateIndexResponse>;

  getAll(request: GetAllItemsRequest): Observable<GetAllItemsResponse>;
}

export interface ItemServiceController {
  searchItem(
    request: SearchItemRequest,
  ): Promise<SearchItemResponse> | Observable<SearchItemResponse> | SearchItemResponse;

  createIndex(
    request: CreateIndexRequest,
  ): Promise<CreateIndexResponse> | Observable<CreateIndexResponse> | CreateIndexResponse;

  getAll(
    request: GetAllItemsRequest,
  ): Promise<GetAllItemsResponse> | Observable<GetAllItemsResponse> | GetAllItemsResponse;
}

export function ItemServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["searchItem", "createIndex", "getAll"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("ItemService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("ItemService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const ITEM_SERVICE_NAME = "ItemService";
